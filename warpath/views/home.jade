extends layout

block prepend head
  != js('hopscotch.min')

block append head
  script(src='https://api.tiles.mapbox.com/mapbox.js/v1.6.4/mapbox.js')
  link(rel='stylesheet', href='https://api.tiles.mapbox.com/mapbox.js/v1.6.4/mapbox.css')

  style.
    #map { 
      position:absolute; 
      top:0; 
      bottom:0; 
      width:100%; 
      height:100%
    }
    .leaflet-top {
      top:100px;  
    }
    .filter-ui {
      position:absolute;
      top:100px;
      right:10px;
      z-index:100;
      padding:10px;
      border-radius:3px;
      color:black;
      max-width:150px;
    }
    .filter-ui .btn {
      min-width:135px;
    }

block container
  .container-fluid
    include partials/flash
    .row
      nav(id='filters' class='filter-ui')
        div
          span.btn.btn-mountain Mountain
          span.btn.btn-snow Snow
          span.btn.btn-air Air
          span.btn.btn-land Land
          span.btn.btn-water Water

      div(id="map")
    

  script(type="text/javascript").
    var newVisit = localStorage.getItem('isNewVisit');
    localStorage.setItem('isNewVisit', 'no');
    
    hopscotch.registerHelper('fillText', function(textFieldId, textStr) {
      document.getElementById(textFieldId).value = textStr;
    });

    var tourLocales = {
      nextBtn: "Prochaine étape",
      prevBtn: "En arrière !",
      doneBtn: "Fini ! Grouille toi !",
    };

    var tour = {
      id: "hello-hopscotch",
      i18n: tourLocales,
      steps: [
        {
          title: "Pour toi novice !",
          content: "Tu es peut-être expert dans ton domaine, mais surement pas sur le site. <br/> Alors ce n’est pas une obligation, mais un gros conseil : <strong>SUIS CE TUTORIEL !</strong> <br/><br/>  À bon entendeur.",
          target: ".navbar-brand",
          placement: "left",
          placement: "bottom",
          xOffset: 'center',
          arrowOffset: 'center',
          width: 400
        },
        {
          title: "Commence déjà par choisir ton univers !",
          content: "",
          target: ".btn-snow",
          placement: "left",
        },
        {
          title: "Accède directement aux meilleurs vidéos sur la carte !",
          content: "Encore 3 étapes",
          target: ".leaflet-marker-icon",
          placement: "left",
          onNext: ["fillText", "search", "N'importe quoi!"],
        },
        {
          title: "Classique :",
          content: "Tape ici ce que tu veux !",
          target: "#search",
          placement: "bottom"
        },
        {
          title: "Si tu veux profiter à fond, il faut un compte !",
          content: "",
          target: ".btn-signup",
          placement: "bottom"
          
        }


      ]
    };

    if(!newVisit){
      // Start the tour!
      hopscotch.startTour(tour);
    }
      

  script(type="text/javascript").
    //https://www.mapbox.com/mapbox.js/example/v1.0.0/
    //see https://www.mapbox.com/mapbox.js/example/v1.0.0/divicon/
    var marker;
    var map = L.mapbox.map('map', 'warpath.ik58n87j', {
            minZoom: 3
        })
        .addControl(L.mapbox.geocoderControl('warpath.ik58n87j'));

    var myLayer = L.mapbox.featureLayer().addTo(map);

    // The GeoJSON representing the two point features
    var geojson = !{geoJSON_videos};
    console.log(geojson)

    // Set a custom icon on each marker based on feature properties.
    myLayer.on('layeradd', function(e) {
        var marker = e.layer,
            feature = marker.feature;
        
        var json_icon = {
            "snow": {
                "icon": {
                    "iconUrl": "/img/pins/snow.png",
                    "iconSize": [32, 96],
                    "iconAnchor": [8, 96],
                    "popupAnchor": [8, -96],
                    "className": "dot"
                }
            },
            "air": {
                "icon": {
                    "iconUrl": "/img/pins/air.png",
                    "iconSize": [32, 96],
                    "iconAnchor": [8, 96],
                    "popupAnchor": [8, -96],
                    "className": "dot"
                }
            },
            "land": {
                "icon": {
                    "iconUrl": "/img/pins/land.png",
                    "iconSize": [32, 96],
                    "iconAnchor": [8, 96],
                    "popupAnchor": [8, -96],
                    "className": "dot"
                }
            },
            "mountain": {
                "icon": {
                    "iconUrl": "/img/pins/mountain.png",
                    "iconSize": [32, 96],
                    "iconAnchor": [8, 96],
                    "popupAnchor": [8, -96],
                    "className": "dot"
                }
            },
            "water": {
                "icon": {
                    "iconUrl": "/img/pins/water.png",
                    "iconSize": [32, 96],
                    "iconAnchor": [8, 96],
                    "popupAnchor": [8, -96],
                    "className": "dot"
                }
            }
        }

        marker.setIcon(L.icon(json_icon[feature.properties.type].icon));
    });

    // Pass features and a custom factory function to the map
    myLayer.setGeoJSON(geojson);
    myLayer.on('click', function(e) {
        e.layer.unbindPopup();
        window.location.href = e.layer.feature.properties.url;
    });


    // Wait until the marker layer is loaded in order to build a list of possible
    // types. If you are doing this with another featureLayer, you should change
    // map.featureLayer to the variable you have assigned to your featureLayer.
    map.featureLayer.on('ready', function() {

      var filters = $('.filter-ui .btn');
      filters
        .each(function(index, el){
          $(el).data('state', 'active');
        })
        .on('click', function(){
          
          if ( $(this).data('state') == 'active' ) 
            $(this).data('state', 'inactive').addClass('active');
          else
            $(this).data('state', 'active').removeClass('active');

          update();
        });


      // This function is called whenever someone clicks on a checkbox and changes
      // the selection of markers to be displayed.
      function update() {
        var enabled = {};
        $('.filter-ui .btn')
          .each(function(index, el){
            if ($(el).data('state') == 'active') enabled[$(el).text().toLowerCase()] = true;
          });
        
        myLayer.setFilter(function(feature) {
          return (feature.properties['type'] in enabled);
        });
      }
    });

